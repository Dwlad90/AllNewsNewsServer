// <auto-generated />
using System;
using Tenli.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Tenli.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190122230817_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Tenli.Server.Data.Models.ActiveSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicationUserId");

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<string>("IPAddress");

                    b.Property<bool>("IsTerminated");

                    b.Property<DateTime>("LastRefreshDateTime");

                    b.Property<string>("Location");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("UserAgent");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ActiveSessions");
                });

            modelBuilder.Entity("Tenli.Server.Data.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRoles");
                });

            modelBuilder.Entity("Tenli.Server.Data.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<string>("CreationUser");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Hash");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsBanned");

                    b.Property<string>("LastName");

                    b.Property<int>("LoginAttempts");

                    b.Property<DateTime?>("LoginBannedUntilDateTime");

                    b.Property<string>("MiddleName");

                    b.Property<DateTime>("ModificationDateTime");

                    b.Property<string>("ModificationUser");

                    b.Property<string>("Phone");

                    b.Property<string>("PushNotificationsToken");

                    b.Property<byte[]>("Salt");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("Tenli.Server.Data.Models.UserRole", b =>
                {
                    b.Property<int>("ApplicationRoleId");

                    b.Property<int>("ApplicationUserId");

                    b.HasKey("ApplicationRoleId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Tenli.Server.Data.Models.ActiveSession", b =>
                {
                    b.HasOne("Tenli.Server.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ActiveSessions")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tenli.Server.Data.Models.UserRole", b =>
                {
                    b.HasOne("Tenli.Server.Data.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tenli.Server.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
